<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chronoswood.doublechoose.dao.WillDao">

    <resultMap id="willMap" type="com.chronoswood.doublechoose.model.Will">
        <result column="precedence" property="precedence"/>
    </resultMap>
    <resultMap id="studentMap" type="com.chronoswood.doublechoose.model.Student">
        <id column="id" property="id"/>
        <result column="gender" property="gender"/>
        <result column="name" property="name"/>
        <result column="user_name" property="userName"/>
        <result column="photoURL" property="photoURL"/>
        <result column="introduction" property="introduction"/>

    </resultMap>
    <resultMap id="willDtoMap" type="com.chronoswood.doublechoose.model.WillDto">
        <association property="will" javaType="com.chronoswood.doublechoose.model.Will" resultMap="willMap"/>
        <association property="student" javaType="com.chronoswood.doublechoose.model.Student" resultMap="studentMap"/>
    </resultMap>
    <insert id="storeWill" useGeneratedKeys="true">
        INSERT INTO will(`student_id`, `project_id`, `period_id`, `precedence`) VALUES
            <foreach collection="wills" item="will" separator=",">
                (
                #{will.studentId},
                #{will.projectId},
                #{will.periodId},
                #{will.precedence}
                )
            </foreach>
    </insert>

    <update id="acceptWill">
        UPDATE will JOIN director JOIN project ON will.period_id=project.id AND project.director_id=director.id AND director.user_name=#{directorUserName}
        SET accepted = 1 WHERE id IN
        <foreach collection="willIds" item="willId" separator="," open="(" close=")">
            #{willId}
        </foreach>
    </update>
    
    <select id="queryWillByDirectorUsernameAndProjectId" resultMap="willDtoMap">
        SELECT
        will.*,
        student.*
        FROM will
        LEFT JOIN project ON project.id=will.project_id
        LEFT JOIN period on will.period_id=period.id and NOW() >= period.begin and NOW() &lt;= period.end
        left JOIN student ON student.id = will.student_id
        left JOIN director ON  project.director_id = director.id and director.user_name = #{directorUsername}
        where project_id=#{projectId}
        ORDER BY will.update_time DESC
        LIMIT #{offset}, #{amount}
    </select>
</mapper>